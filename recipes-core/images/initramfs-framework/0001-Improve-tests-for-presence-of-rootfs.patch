From bc84dcd02c7c53f0056bdbf53820e9fd6324acb1 Mon Sep 17 00:00:00 2001
From: Igor Stoppa <igor.stoppa@intel.com>
Date: Tue, 1 Nov 2016 14:34:00 +0200
Subject: [PATCH] Improve tests for presence of rootfs.

Replace test for persence of dev with test for success of mounting
and presence of all the directories to be mounted.

Signed-off-by: Igor Stoppa <igor.stoppa@intel.com>
---
 finish | 14 ++++++--------
 rootfs | 26 ++++++++++----------------
 2 files changed, 16 insertions(+), 24 deletions(-)

diff --git a/finish b/finish
index 717383e..dedb68a 100755
--- a/finish
+++ b/finish
@@ -8,16 +8,14 @@ finish_enabled() {
 
 finish_run() {
 	if [ -n "$ROOTFS_DIR" ]; then
-		if [ ! -d $ROOTFS_DIR/dev ]; then
-			fatal "ERROR: There's no '/dev' on rootfs."
-		fi
-
 		info "Switching root to '$ROOTFS_DIR'..."
-
 		debug "Moving /dev, /proc and /sys onto rootfs..."
-		mount --move /dev $ROOTFS_DIR/dev
-		mount --move /proc $ROOTFS_DIR/proc
-		mount --move /sys $ROOTFS_DIR/sys
+        for DIR in dev proc sys; do
+		    if [ ! -d $ROOTFS_DIR/$DIR ]; then
+			    fatal "ERROR: There's no '/$DIR' on rootfs."
+		    fi
+		    mount --move /$DIR $ROOTFS_DIR/$DIR
+        done
 
 		cd $ROOTFS_DIR
 		exec switch_root -c /dev/console $ROOTFS_DIR ${bootparam_init:-/sbin/init}
diff --git a/rootfs b/rootfs
index 14768f1..8c9234b 100644
--- a/rootfs
+++ b/rootfs
@@ -13,25 +13,20 @@ rootfs_run() {
 	C=0
 	delay=${bootparam_rootdelay:-1}
 	timeout=${bootparam_roottimeout:-5}
-	while [ ! -d $ROOTFS_DIR/dev ]; do
-		if [ $(( $C * $delay )) -gt $timeout ]; then
-			fatal "root '$bootparam_root' doesn't exist or does not contain a /dev."
-		fi
-
+	while true ; do
 		if [ -n "$bootparam_root" ]; then
-			debug "No e2fs compatible filesystem has been mounted, mounting $bootparam_root..."
+			debug "Attempting to mount rootfs ..."
 
 			if [ "`echo ${bootparam_root} | cut -c1-5`" = "UUID=" ]; then
 				root_uuid=`echo $bootparam_root | cut -c6-`
 				bootparam_root="/dev/disk/by-uuid/$root_uuid"
-			fi
-
-			if [ "`echo ${bootparam_root} | cut -c1-9`" = "PARTUUID=" ]; then
+			elif [ "`echo ${bootparam_root} | cut -c1-9`" = "PARTUUID=" ]; then
 				root_uuid=`echo $bootparam_root | cut -c10-`
 				bootparam_root="/dev/disk/by-partuuid/$root_uuid"
 			fi
 
 			if [ -e "$bootparam_root" ]; then
+			    debug "Rootfs on $bootparam_root ..."
 				flags=""
 				if [ -n "$bootparam_ro" ] && ! echo "$bootparam_rootflags" | grep -w -q "ro"; then
 					if [  -n "$bootparam_rootflags" ]; then
@@ -46,17 +41,16 @@ rootfs_run() {
 					flags="$flags -t$bootparam_rootfstype"
 				fi
 				mount $flags $bootparam_root $ROOTFS_DIR
-				if [ -d $ROOTFS_DIR/dev ]; then
+				if [ $? -eq 0 ]; then
 					break
-				else
-					# It is unlikely to change, but keep trying anyway.
-					# Perhaps we pick a different device next time.
-					umount $ROOTFS_DIR
-					fi
 				fi
-		fi
+		    fi
+        fi
 		debug "Sleeping for $delay second(s) to wait root to settle..."
 		sleep $delay
 		C=$(( $C + 1 ))
+		if [ $(( $C * $delay )) -gt $timeout ]; then
+			fatal "root '$bootparam_root' doesn't exist."
+		fi
 	done
 }
-- 
2.6.6

